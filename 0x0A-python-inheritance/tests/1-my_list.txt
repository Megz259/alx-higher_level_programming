====================
How to use 1-my_list
====================

Function is "print_sorted()"


Numbers:
========

"print_sorted" returns a sorted list.

:: with positive integers
  >>> MyList = __import__('1-my_list').MyList
  >>> my_list = MyList()
  >>> isinstance (my_list, list)
  True
  >>> my_list.print_sorted()
  []

:: adding items in a list
  >>> my_list.append(1)
  >>> my_list.append(4)
  >>> my_list.append(3)
  >>> my_list.append(2)
  >>> my_list.append(5)
  >>> my_list.print_sorted()
  [1, 2, 3, 4, 5]

:: with infinte integer
  >>> my_list.append(int ("inf"))
  Traceback (most recent call last):
  ValueError: invalid literal for int() with base of 10: "inf"

:: with zero values
  >>> my_list.append(0)
  >>> my_list.print_sorted()
  [0, 1, 2, 3, 4, 5]

:: with negative values
  >>> my_list.append(-2)
  >>> my_list.print_sorted()
  [-2, 1, 2, 3, 4, 5]

:: with an element repeated
  >>> my_list.append(-2)
  >>> my_list.append(5)
  >>> my_list.print_sorted()
  [-2, -2, 0, 1, 2, 3, 4, 5, 5]

:: with no value
  >>> my_list.append(None)
  >>> my_list.print_sorted()
  Traceback (most recent call last):
  TypeError: unorderable types: NoneType() < int ()

:: with NULL value
  >>> my_list.append(NULL)
  Traceback (most recent call last):
  NameError: name 'NULL' is not defined 
